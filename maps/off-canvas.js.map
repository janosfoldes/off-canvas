{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/off-canvas.js"],"names":[],"mappings":"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","file":"../src/off-canvas.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// OFF-CANVAS\r\n// ==========\r\n\r\nconst attrAppendTo        = 'data-append-to';\r\nconst attrClose           = 'data-close';\r\nconst attrOffCanvas       = 'data-off-canvas';\r\nconst attrOffCanvasButton = 'data-off-canvas-button';\r\nconst attrOffCanvasLock   = 'data-off-canvas-lock';\r\nconst attrSnapTopTo       = 'data-snap-top-to';\r\nconst attrToggler         = 'data-toggler';\r\nconst overlay             = $('<div class=\"canvas-overlay\"></div>');\r\nconst togglerClosed       = 'is-closed';\r\nconst togglerDefault      = 'is-active';\r\nconst togglerLocked       = 'is-locked';\r\nconst togglerNoAnim       = 'no-anim';\r\nconst togglerOpen         = 'is-open';\r\nconst togglerVisible      = 'is-visible';\r\n\r\n// Off-Canvas\r\n// ----------\r\n\r\nexport default class OffCanvas {\r\n    constructor(element) {\r\n        /* Initialize */\r\n        this._offCanvas = $(element);\r\n        this._parent = element.parentElement;\r\n        this._prevSibling = element.previousSibling;\r\n        this._appendTo = $('#' + this._offCanvas.attr(attrAppendTo));\r\n        this._removed = false;\r\n        this._button = $('#' + this._offCanvas.attr(attrOffCanvasButton));\r\n        this._buttonToggler = this._button.attr(attrToggler) || togglerDefault;\r\n        this._snapTopTo = $('#' + this._offCanvas.attr(attrSnapTopTo));\r\n\r\n        /* Initialize object to close */\r\n        let closeId = this._offCanvas.attr(attrClose);\r\n        this._closeEl = (closeId) ? document.getElementById(closeId) : undefined;\r\n\r\n        /* Locks */\r\n        this._locks = []\r\n        let lockIds = OffCanvas.stringToArray(this._offCanvas.attr(attrOffCanvasLock));\r\n        for (let i = 0; i < lockIds.length; i++) {\r\n            this._locks.push($('#' + lockIds[i]));\r\n        }\r\n\r\n        /* Refresh */\r\n        this.refresh();\r\n\r\n        /* Attach methods to the DOM Element of this off-canvas */\r\n        element.close = this.close.bind(this);\r\n        element.open = this.open.bind(this);\r\n\r\n        /* Events */\r\n        $(window).resize((e) => { this.onResize(e) });\r\n        overlay.on('click', (e) => { this.onOverlayClick(e) });\r\n        this._button.on('click', (e) => { this.onButtonClick(e) });\r\n    }\r\n\r\n    close() {\r\n        this.toggle(false);\r\n    }\r\n\r\n    onButtonClick(e) {\r\n        this._offCanvas.removeClass(togglerNoAnim);\r\n        this.toggle();\r\n    }\r\n\r\n    onOverlayClick(e) {\r\n        this.toggle(false);\r\n    }\r\n\r\n    onResize(e) {\r\n         this.refresh();\r\n    }\r\n\r\n    open() {\r\n        this.toggle(true);\r\n    }\r\n\r\n    refresh() {\r\n        this._offCanvas.addClass(togglerNoAnim);\r\n        this.snap();\r\n        let isButtonVisible = this._button.is(':visible');\r\n        if (isButtonVisible != this._isButtonVisible) { // State changed\r\n            if (isButtonVisible) {\r\n                // Remove off-canvas element\r\n                if (this._appendTo !== null) {\r\n                    this._removed = true;\r\n                    this._offCanvas.appendTo(this._appendTo);\r\n                }\r\n            } else {\r\n                if (this._removed) {\r\n                    // Move off-canvas element back\r\n                    if (this._prevSibling !== null) {\r\n                        this._offCanvas.insertAfter(this._prevSibling);\r\n                    } else {\r\n                        this._offCanvas.prependTo(this._parent);\r\n                    }\r\n                    this._removed = false;\r\n                }\r\n            }\r\n            this._offCanvas.toggleClass(togglerDefault, isButtonVisible);\r\n            this.toggle(false);\r\n            this._isButtonVisible = isButtonVisible;\r\n        }\r\n    }\r\n\r\n    snap() {\r\n        // Snap Top\r\n        if (this._snapTopTo.length > 0) {\r\n            this._offCanvas.css('top', this._snapTopTo[0].getBoundingClientRect().bottom + 'px');\r\n        }\r\n    }\r\n\r\n    static stringToArray(str) {\r\n        let a = [];\r\n        if (typeof str === 'string') {\r\n            str = str.trim();\r\n            if (str != '') {\r\n                a = (str.indexOf(',') > -1) ? str.split(/,/) : str.split(/ /);\r\n                for (let i=0; i < a.lenght; i++) a[i] = a[i].trim();\r\n            }\r\n        }\r\n        return a;\r\n    }\r\n\r\n    toggle(state) {\r\n        if (state == undefined) state = !this._offCanvas.hasClass(togglerOpen);\r\n        this._button.toggleClass(this._buttonToggler, state);\r\n        this._offCanvas.toggleClass(togglerOpen, state);\r\n        this._offCanvas.toggleClass(togglerClosed, !state);\r\n        overlay.toggleClass(togglerVisible, state);\r\n        if (state && this._closeEl != undefined) {\r\n            this._closeEl.close();\r\n        }\r\n        for (let i = 0; i < this._locks.length; i++) {\r\n            this._locks[i].toggleClass(togglerLocked, state)\r\n        }\r\n    }\r\n}\r\n\r\n// Initialize canvas overlay and elements with 'data-off-canvas' attribute\r\n// -----------------------------------------------------------------------\r\n\r\nlet offCanvases = [];\r\n$(document).ready(() => {\r\n    overlay.appendTo(document.body);\r\n    $('[' + attrOffCanvas + ']').each((index, item) => {\r\n        offCanvases.push(new OffCanvas(item));\r\n    });\r\n});\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}